apiVersion: v1
kind: Service
metadata:
  annotations:
    prometheus.io/scrape: 'false'
    prometheus.io/probe: 'true'
  labels:
    name: grafana
  name: grafana
spec:
  selector:
    app: grafana
  type: NodePort
  ports:
  - name: grafana
    protocol: TCP
    port: 3000
    nodePort: 30080
----
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: grafana
spec:
  replicas: 1
  selector:
    matchLabels:
      app: grafana
  template:
    metadata:
      name: grafana
      labels:
        app: grafana
    spec:
      containers:
      - name: grafana
        image: grafana/grafana:latest
        ports:
        - name: web
          containerPort: 3000
        livenessProbe:
          httpGet:
            path: /login
            port: 3000
          initialDelaySeconds: 15
          timeoutSeconds: 1
        volumeMounts:
        - name: config-volume
          mountPath: /etc/grafana
        - name: dashboard-volume
          mountPath: /var/lib/grafana-dashboards
        - name: grafanapd
          mountPath: "/var/lib/grafana"
      volumes:
      - name: config-volume
        configMap:
          name: grafana
      - name: dashboard-volume
        configMap:
          name: grafanadashs
      - name: grafanapd
        persistentVolumeClaim:
          claimName: grafanaclaim1
